code = ""
-- local xmlText = Inflate(common.base64.decode(buf:gsub("-","+"):gsub("_","/")))

xmlText = base64.decode(code:gsub("-","+"):gsub("_","/"))

-- self.build:Init(self.build.dbFileName, self.build.buildName, xmlText)

build = buildMode:Init(nil, nil, xmlText)
